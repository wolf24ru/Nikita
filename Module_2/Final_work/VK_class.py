import random
from typing import Dict, Union, Any, Type

import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.longpoll import VkLongPoll, VkEventType


class VK_bot:
    def __init__(self, group_id: int, token_vk_group: str):
        self.token_vk_group = token_vk_group
        self.vk_session = vk_api.VkApi(token=self.token_vk_group)
        self.longpoll = VkBotLongPoll(self.vk_session, group_id)

        service_key = '1d3b026e1d3b026e1d3b026e4f1d437ba211d3b1d3b026e7dd950775b189f26d67f7236'
        self.service_session = vk_api.VkApi(token=service_key)

        # self.vk = self.vk_session.get_api()

        self.keyboard_new = VkKeyboard(one_time=False)
        self.keyboard_new.add_button('–ù–∞—á–∞—Ç—å', color=VkKeyboardColor.POSITIVE)

        self.keyboard_old = VkKeyboard(one_time=False)
        self.keyboard_old.add_button('–ü–æ–∏—Å–∫', color=VkKeyboardColor.POSITIVE)
        self.keyboard_old.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å', color=VkKeyboardColor.PRIMARY)

        self.keyboard_request = VkKeyboard(one_time=False)
        self.keyboard_request.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', color=VkKeyboardColor.SECONDARY)
        self.keyboard_request.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª', color=VkKeyboardColor.SECONDARY)
        self.keyboard_request.add_line()
        self.keyboard_request.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', color=VkKeyboardColor.SECONDARY)
        self.keyboard_request.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ', color=VkKeyboardColor.SECONDARY)
        self.keyboard_request.add_line()
        self.keyboard_request.add_button('–í—Å—ë –≤–µ—Ä–Ω–æ', color=VkKeyboardColor.PRIMARY)
        self.keyboard_request.add_line()
        self.keyboard_request.add_button('–£–¥–∞–ª–∏—Ç—å –≤—Å—ë –æ–± –æ –º–Ω–µ', color=VkKeyboardColor.NEGATIVE)

        self.keyboard_sex = VkKeyboard(one_time=True)
        self.keyboard_sex.add_button('–ú—É–∂—Å–∫–æ–π', color=VkKeyboardColor.SECONDARY)
        self.keyboard_sex.add_button('–ñ–µ–Ω—Å–∫–∏–π', color=VkKeyboardColor.SECONDARY)

        self.keyboard_marital_normal = VkKeyboard(one_time=False)
        self.keyboard_marital_normal.add_button('–Ω–µ –∂–µ–Ω–∞—Ç (–Ω–µ –∑–∞–º—É–∂–µ–º)', color=VkKeyboardColor.SECONDARY)
        self.keyboard_marital_normal.add_button('–≤—Å—ë —Å–ª–æ–∂–Ω–æ', color=VkKeyboardColor.SECONDARY)
        self.keyboard_marital_normal.add_line()
        self.keyboard_marital_normal.add_button('–≤ –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ', color=VkKeyboardColor.SECONDARY)
        self.keyboard_marital_normal.add_button('–≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –±—Ä–∞–∫–µ', color=VkKeyboardColor.SECONDARY)

        self.keyboard_wrong = VkKeyboard(one_time=True)
        self.keyboard_wrong.add_button('–ó–∞–∫–æ–Ω—á–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)

        self.keyboard_new.get_keyboard()

    def send_msg(self, message: str, user_id: str, keyboard=None):
        self.vk_session.get_api().messages.send(
            user_id=user_id,
            random_id=get_random_id(),
            keyboard=keyboard,
            message=message
        )

    def listen_dialog(self) -> list:
        lslongpooll = VkLongPoll(self.vk_session)

        for event in lslongpooll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
                user_info = self.vk_session.get_api().users.get(
                    user_ids=event.user_id,
                    fields='sex,city,'
                )
                print(f'{event.user_id}: {event.text}')
                response = [user_info, event]
                return response

    def not_understand_msg(self, user_id: str):
        self.send_msg(message=f'–ü—Ä–æ—Å—Ç–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞—á–∞—Ç—å –≤—Å–µ —Å–Ω–∞—á–∞–ª–∞',
                      user_id=user_id,
                      keyboard=self.keyboard_new.get_keyboard()
                      )

    def wrong_input(self, user_id):
        self.send_msg(message=f'–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n'
                              f'–ú–æ–∂–µ—Ç –ø–æ–ø—Ä–æ–±—É–µ—à—å —Å–Ω–æ–≤–∞',
                      user_id=user_id,
                      keyboard=self.keyboard_sex.get_keyboard()
                      )

    def search_city_id(self, city: str) -> int:
        city_result = self.service_session.get_api().database.getCities(
            country_id=1,
            q=city,
            need_all=0,
            count=1,
        )
        print(city_result)
        return city_result['items'][0]['id']





    def new_user_search(self, user_id) -> dict:
        marital_status = int
        next_msg = True
        sex = int
        marital_status_dict = {
            '–Ω–µ –∂–µ–Ω–∞—Ç (–Ω–µ –∑–∞–º—É–∂–µ–º)': 1,
            '–≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è': 2,
            '–ø–æ–º–æ–ª–≤–ª–µ–Ω(-–∞)': 3,
            '–∂–µ–Ω–∞—Ç (–∑–∞–º—É–∂–µ–º)': 4,
            '–≤—Å—ë —Å–ª–æ–∂–Ω–æ': 5,
            '–≤ –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ': 6,
            '–≤–ª—é–±–ª–µ–Ω(-–∞)': 7,
            '–≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –±—Ä–∞–∫–µ': 8
        }

        self.send_msg(message=f'–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ –≤—ã–±–µ—Ä–∏ –ø–æ–ª —Å–≤–æ–µ–π –±—É–¥—É—â–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–∏',
                      user_id=user_id,
                      keyboard=self.keyboard_sex.get_keyboard()
                      )
        text = self.listen_dialog()[1].text
        if text == '–ú—É–∂—Å–∫–æ–π':
            sex = 2
        elif text == '–ñ–µ–Ω—Å–∫–∏–π':
            sex = 1
        else:
            self.not_understand_msg(user_id)

        self.send_msg(message=f'–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º. \n'
                              f'–ù–∞–ø–∏—à–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª.',
                      user_id=user_id,
                      )
        while True:
            text = self.listen_dialog()[1].text
            if text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å':
                self.send_msg(message=f'–ò–∏–∏–∏... –ó–∞–∫–æ–Ω—á–∞–ª–∏!',
                              user_id=user_id,
                              keyboard=self.keyboard_sex.get_keyboard()
                              )

                return None
            age = text.split()
            try:
                if int(age[0]) and int(age[1]):
                    break
            except ValueError:
                self.wrong_input(user_id)

        self.send_msg(message=f'–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥.\n'
                              f'–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å ?',
                      user_id=user_id,
                      )
        city = self.listen_dialog()[1].text

        self.send_msg(message=f'–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É–Ω–∫—Ç –Ω–∞–¥–µ—é—Å—å —Ç—ã –∫ –Ω–µ–º—É –≥–æ—Ç–æ–≤.\n'
                              f'–í—ã–±–µ—Ä–∏ —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.\n'
                              f'–•–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–æ–¥—É–º–∞–π –ø—Ä–µ–∂–¥–µ —á–µ–º —Ä–µ—à–∏—Ç—å, —Ç—É—Ç —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ—à–∏–±–∏—Ç—å—Å—è.\n'
                              f'–í—ã–±–µ—Ä–µ—à—å –æ–¥–Ω–∞–∂–¥—ã - –Ω–µ —Å–º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–æ–≥–¥–∞!!!üëª',
                      user_id=user_id,
                      )
        self.send_msg(message=f'–®—É—á—É, —Ç—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞üòú',
                      user_id=user_id,
                      keyboard=self.keyboard_marital_normal.get_keyboard()
                      )
        text = self.listen_dialog()[1].text

        search_dict: Dict[str, Union[Union[int, Type[int]], Any]] = {
            'sex': sex,
            'age_from': age[0],
            'age_to': age[1],
            'city': city,
            'marital_status': marital_status_dict[text]
        }
        return search_dict
